name: 'Setup Python and Dependencies'
description: 'Set up Python environment with caching and install project dependencies'
author: 'MCP Server LangGraph Team'

inputs:
  python-version:
    description: 'Python version to set up (e.g., 3.12 or ["3.10", "3.11", "3.12"])'
    required: false
    default: '3.12'

  install-dev:
    description: 'Install development dependencies'
    required: false
    default: 'false'

  install-test:
    description: 'Install test dependencies'
    required: false
    default: 'false'

  cache-key-prefix:
    description: 'Prefix for cache key (e.g., "lint", "test")'
    required: false
    default: 'deps'

runs:
  using: 'composite'
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v7.1.1
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v4.3.0
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ inputs.cache-key-prefix }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ inputs.cache-key-prefix }}-
          ${{ runner.os }}-uv-

    - name: Install base dependencies
      run: |
        uv venv --python ${{ inputs.python-version }}
        uv sync --frozen
      shell: bash

    - name: Install test dependencies
      if: inputs.install-test == 'true'
      run: uv sync --frozen --group dev
      shell: bash

    - name: Validate dependency consistency
      run: |
        uv pip check
        echo "âœ“ All dependencies are consistent (no conflicts detected)"
      shell: bash
