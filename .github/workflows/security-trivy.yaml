name: Security Scanning - Trivy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest

    strategy:
      matrix:
        scan-type: [fs, image, config]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        if: matrix.scan-type == 'fs'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '1'  # Fail on vulnerabilities

      - name: Upload Trivy filesystem results to GitHub Security
        if: matrix.scan-type == 'fs' && always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-fs-results.sarif'
          category: 'trivy-fs'

      - name: Set up Docker Buildx
        if: matrix.scan-type == 'image'
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        if: matrix.scan-type == 'image'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          load: true
          tags: ghcr.io/vishnu2kmohan/mcp-server-langgraph:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy image scan
        if: matrix.scan-type == 'image'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'ghcr.io/vishnu2kmohan/mcp-server-langgraph:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: Upload Trivy image results to GitHub Security
        if: matrix.scan-type == 'image' && always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-image-results.sarif'
          category: 'trivy-image'

      - name: Run Trivy config scan
        if: matrix.scan-type == 'config'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-config-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'  # Don't fail on config issues

      - name: Upload Trivy config results to GitHub Security
        if: matrix.scan-type == 'config' && always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-config-results.sarif'
          category: 'trivy-config'

  trivy-report:
    name: Generate Trivy Report
    runs-on: ubuntu-latest
    needs: trivy-scan
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run comprehensive Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          output: 'trivy-report.txt'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Upload Trivy report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-security-report
          path: trivy-report.txt
          retention-days: 30

      - name: Comment PR with scan results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('trivy-report.txt', 'utf8');

            const comment = `## Trivy Security Scan Results

            <details>
            <summary>Click to view full report</summary>

            \`\`\`
            ${report}
            \`\`\`

            </details>
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: comment
            });

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          load: true
          tags: ghcr.io/vishnu2kmohan/mcp-server-langgraph:${{ github.sha }}

      - name: Generate SBOM
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'ghcr.io/vishnu2kmohan/mcp-server-langgraph:${{ github.sha }}'
          format: 'cyclonedx'
          output: 'sbom.json'

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          retention-days: 90

  vulnerability-database-update:
    name: Update Vulnerability Database
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - name: Update Trivy DB
        run: |
          docker run --rm aquasec/trivy:latest image --download-db-only
          echo "Trivy vulnerability database updated"
