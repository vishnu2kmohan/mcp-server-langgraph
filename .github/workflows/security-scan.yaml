name: Security Scan

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}  # Cancel only for PRs

permissions:
  contents: read
  security-events: write

jobs:
  trivy-scan:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Build Docker image
      run: docker build -f docker/Dockerfile -t mcp-server-langgraph:scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.33.1
      with:
        image-ref: 'mcp-server-langgraph:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'  # Match tested versions (3.10-3.12)

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true  # Allow failures but report them

    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json
      continue-on-error: true  # Allow failures but report them

    - name: Upload reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports
        path: |
          safety-report.json
          pip-audit-report.json
        retention-days: 30

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: python
        queries: security-and-quality

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@v3.87.0
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'  # Match tested versions (3.10-3.12)

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-pinned.txt
        pip install pip-licenses

    - name: Check licenses
      run: |
        pip-licenses --format=json --output-file=licenses.json
        pip-licenses --format=markdown --output-file=licenses.md

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: |
          licenses.json
          licenses.md
        retention-days: 90

  notify-security:
    name: Notify Security Team
    runs-on: ubuntu-latest
    needs: [trivy-scan, dependency-check, codeql, secrets-scan]
    if: failure()
    steps:
    - name: Send notification
      uses: slackapi/slack-github-action@v2.0.0
      if: ${{ secrets.SLACK_SECURITY_WEBHOOK != '' }}
      with:
        webhook-type: incoming-webhook
        webhook: ${{ secrets.SLACK_SECURITY_WEBHOOK }}
        payload: |
          {
            "text": "⚠️ Security scan failed!",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Security Scan Failed*\n⚠️ Security vulnerabilities detected in repository.\n\n*Workflow:* ${{ github.workflow }}\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                }
              }
            ]
          }
