name: Security Scan

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  trivy-scan:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t mcp-server-langgraph:scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'mcp-server-langgraph:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v4
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json || true

    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json || true

    - name: Upload reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports
        path: |
          safety-report.json
          pip-audit-report.json

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: python
        queries: security-and-quality

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-pinned.txt
        pip install pip-licenses

    - name: Check licenses
      run: |
        pip-licenses --format=json --output-file=licenses.json
        pip-licenses --format=markdown --output-file=licenses.md

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: |
          licenses.json
          licenses.md

  notify-security:
    name: Notify Security Team
    runs-on: ubuntu-latest
    needs: [trivy-scan, dependency-check, codeql, secrets-scan]
    if: failure()
    steps:
    - name: Send notification
      uses: 8398a7/action-slack@v3
      if: ${{ secrets.SLACK_SECURITY_WEBHOOK }}
      with:
        status: 'failure'
        text: '⚠️ Security scan failed! Check GitHub Actions for details.'
        webhook_url: ${{ secrets.SLACK_SECURITY_WEBHOOK }}
