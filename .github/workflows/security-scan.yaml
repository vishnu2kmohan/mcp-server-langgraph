name: Security Scan

# ==============================================================================
# Security Scan - Comprehensive Security Analysis
# ==============================================================================
#
# Purpose:
#   Multi-layered security scanning for container vulnerabilities, dependency
#   issues, code vulnerabilities, secrets leakage, and license compliance.
#
# Triggers:
#   - Daily schedule (2 AM UTC)
#   - Pull requests to main/develop
#   - Release publication
#   - Manual workflow dispatch
#   - Workflow call (reusable by other workflows)
#
# Jobs:
#   - Trivy Container Scan: Container image vulnerability scanning
#   - Dependency Check: Python dependency vulnerability analysis (Safety, pip-audit)
#   - CodeQL Analysis: Static code analysis for security issues
#   - Secrets Scan: TruffleHog secret detection in git history
#   - License Check: License compliance verification
#
# Features:
#   - SARIF upload to GitHub Security tab
#   - Artifact retention for reports (30-90 days)
#   - Slack notifications on failure (if configured)
#   - Reusable via workflow_call
#
# History:
#   - 2025-10-20: Added workflow_call trigger for reusability
#   - 2025-10-20: Migrated to composite action for Python setup
#
# ==============================================================================

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  pull_request:
    branches: [main, develop]
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering
  workflow_call:  # Allow being called by other workflows

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}  # Cancel only for PRs

permissions:
  contents: read
  security-events: write

jobs:
  trivy-scan:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Build Docker image
      run: docker build -f docker/Dockerfile -t mcp-server-langgraph:scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.33.1
      with:
        image-ref: 'mcp-server-langgraph:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v4.30.9
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Python
      uses: ./.github/actions/setup-python-deps
      with:
        python-version: '3.12'
        cache-key-prefix: 'security-deps'

    - name: Install security scanning tools
      run: |
        uv tool install safety
        uv tool install pip-audit

    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true  # Allow failures but report them

    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json
      continue-on-error: true  # Allow failures but report them

    - name: Upload reports
      uses: actions/upload-artifact@v4.6.2
      with:
        name: dependency-reports
        path: |
          safety-report.json
          pip-audit-report.json
        retention-days: 30

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4.30.9
      with:
        languages: python
        queries: security-and-quality

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4.30.9

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@v3.90.12
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Python and dependencies
      uses: ./.github/actions/setup-python-deps
      with:
        python-version: '3.12'
        cache-key-prefix: 'license-check'

    - name: Install license checking tool
      run: uv tool install pip-licenses

    - name: Check licenses
      run: |
        pip-licenses --format=json --output-file=licenses.json
        pip-licenses --format=markdown --output-file=licenses.md

    - name: Upload license report
      uses: actions/upload-artifact@v4.6.2
      with:
        name: license-report
        path: |
          licenses.json
          licenses.md
        retention-days: 90

  notify-security:
    name: Notify Security Team
    runs-on: ubuntu-latest
    needs: [trivy-scan, dependency-check, codeql, secrets-scan]
    if: failure() && github.event_name != 'push'
    steps:
    - name: Send notification
      uses: slackapi/slack-github-action@v2.0.0
      if: ${{ secrets.SLACK_SECURITY_WEBHOOK != '' }}
      with:
        webhook-type: incoming-webhook
        webhook: ${{ secrets.SLACK_SECURITY_WEBHOOK }}
        payload: |
          {
            "text": "⚠️ Security scan failed!",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Security Scan Failed*\n⚠️ Security vulnerabilities detected in repository.\n\n*Workflow:* ${{ github.workflow }}\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                }
              }
            ]
          }
