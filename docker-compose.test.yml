# Docker Compose for Test Infrastructure
# Lightweight setup for running integration tests
# Run with: docker compose -f docker-compose.test.yml up -d

services:
  # Qdrant - Vector Database for Semantic Search Tests
  qdrant-test:
    image: qdrant/qdrant:v1.15.5
    container_name: qdrant-test
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=WARN  # Reduce logging for tests
    tmpfs:
      # Use tmpfs for faster test performance (data not persisted)
      - /qdrant/storage
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:6333/"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  # Redis - For session and checkpoint tests
  redis-test:
    image: redis:7.2.7-alpine
    container_name: redis-test
    ports:
      - "6379:6379"
    command: redis-server --databases 16
    tmpfs:
      # Use tmpfs for faster test performance
      - /data
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s
      retries: 5

  # Postgres - For OpenFGA and integration tests (optional)
  postgres-test:
    image: postgres:16.10-alpine3.22
    container_name: postgres-test
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"
    tmpfs:
      # Use tmpfs for faster test performance
      - /var/lib/postgresql/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user"]
      interval: 3s
      timeout: 2s
      retries: 5

networks:
  test-network:
    driver: bridge
