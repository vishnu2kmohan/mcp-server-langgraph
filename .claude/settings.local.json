{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(docker build:*)",
      "Bash(while read page)",
      "Bash(do [ ! -f \"docs/$page.mdx\" ])",
      "Bash(echo:*)",
      "Bash(done)",
      "Bash(git remote add:*)",
      "Bash(git remote remove:*)",
      "Bash(gh pr view:*)",
      "Bash(for pr in 1 2 3 4 6)",
      "Bash(do)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr list:*)",
      "Bash(gh api:*)",
      "Bash(gh pr close:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr checks:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(test:*)",
      "Bash(python3:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(PYO3_USE_ABI3_FORWARD_COMPATIBILITY=1 pip install -r requirements.txt)",
      "Bash(pytest:*)",
      "Bash(tee:*)",
      "Bash(gh run list:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run view:*)",
      "Bash(pip index versions:*)",
      "Bash(sort:*)",
      "Bash(git pull:*)",
      "Bash(uv:*)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(bandit:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(make lint)",
      "Bash(make security-check:*)",
      "Bash(if [ -f .venv/bin/activate ])",
      "Bash(then source .venv/bin/activate)",
      "Bash(python:*)",
      "Bash(else echo \"No venv activation script\")",
      "Bash(fi)",
      "Bash(.venv/bin/python:*)",
      "Bash(PYTHONPATH=/home/codey/Projects/langgraph_mcp_agent/.venv/lib/python3.12/site-packages:/home/codey/Projects/langgraph_mcp_agent pytest -m unit -v --tb=short)",
      "Bash(export:*)",
      "Bash(ldd:*)",
      "Bash(cat:*)",
      "Bash(awk:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(git mv:*)",
      "Bash(git rm:*)",
      "Bash(PYTHONPATH=src:. python -m pytest tests/test_feature_flags.py -v --tb=short)",
      "Bash(chmod:*)",
      "Bash(else echo \"No venv\")",
      "Bash(docker-compose:*)",
      "Bash(docker compose:*)",
      "Bash(PYTHONPATH=src:. uv run pytest -m unit -v --tb=short)",
      "Bash(.venv/bin/pytest -m unit -v --tb=short)",
      "Read(//tmp/**)",
      "Bash(.venv/bin/pytest -m unit -v --tb=line)",
      "Bash(timeout 60 .venv/bin/pytest -m unit -v --tb=line -x)",
      "Bash(timeout 90 .venv/bin/pytest -m unit --tb=line --maxfail=3 -q)",
      "Bash(timeout 90 .venv/bin/pytest -m unit -v --tb=line --maxfail=5 -x)",
      "Bash(tree:*)",
      "Bash(timeout 90 pytest -m unit -v --tb=line --maxfail=5 -x)",
      "Bash(PYTHONPATH=/home/codey/Projects/vishnu2kmohan/langgraph_mcp_agent/.venv/lib/python3.12/site-packages:/home/codey/Projects/vishnu2kmohan/langgraph_mcp_agent timeout 90 python3 -m pytest -m unit -v --tb=line --maxfail=5 -x)",
      "Bash(.venv/bin/python3 -m pip install:*)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false uv run python3 -m pytest -m unit --tb=short --maxfail=3 -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest -m unit --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_feature_flags.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_agent.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_pydantic_ai.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest -m unit --tb=line -q --co)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest -m unit --tb=line --maxfail=1 -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_auth.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_openfga_client.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_secrets_manager.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_health_check.py -v --tb=line)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_mcp_streamable.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/property/test_llm_properties.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/property/test_llm_properties.py::TestLLMFactoryFallbackProperties -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/property/test_llm_properties.py tests/property/test_auth_properties.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest -m unit -v --tb=line --cov=src --cov-report=xml --cov-report=html)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false AUTH_PROVIDER=inmemory uv run python3 -m pytest tests/test_auth.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false AUTH_PROVIDER=inmemory timeout 90 uv run python3 -m pytest tests/test_auth.py --tb=line -q)",
      "Bash(gh release:*)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false AUTH_PROVIDER=inmemory uv run python3 -m pytest tests/test_keycloak.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false AUTH_PROVIDER=inmemory timeout 60 uv run python3 -m pytest tests/test_keycloak.py::TestKeycloakConfig -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_keycloak.py::TestKeycloakConfig -v --tb=short -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_session.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_user_provider.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_auth.py -v --tb=line -q --maxfail=5)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_openfga_client.py -v --tb=line -q --maxfail=3)",
      "Bash(timeout 90 uv run:*)",
      "Bash(timeout 120 uv run:*)",
      "Bash(timeout 60 uv run python3 -m pytest tests/test_auth.py tests/test_user_provider.py tests/test_openfga_client.py tests/test_pydantic_ai.py tests/test_agent.py tests/test_session.py -v --tb=line -q)",
      "Bash(timeout 60 uv run:*)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/property/test_auth_properties.py -v --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/ -m unit --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/ -m unit --tb=no -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false timeout 90 uv run python3 -m pytest tests/ -m unit --tb=no -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/ -m unit --tb=no --no-header)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_auth.py tests/test_keycloak.py tests/test_user_provider.py tests/test_openfga_client.py tests/test_pydantic_ai.py -m unit -v --tb=line)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_auth.py::TestAuthMiddleware::test_authorize_fallback_admin_access -v)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false uv run python3 -m pytest tests/test_auth.py -m unit --tb=line -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false timeout 90 uv run python3 -m pytest -m unit --tb=no -q)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false timeout 90 uv run python3 -m pytest -m unit --tb=no --no-header)",
      "Bash(timeout:*)",
      "Bash(kubectl apply:*)",
      "Bash(for:*)",
      "Bash(helm lint:*)",
      "Bash(helm template:*)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false timeout 90 uv run python3 -m pytest -m unit --tb=no --no-header -q)",
      "Bash(while read f)",
      "Bash(do if ! test -r \"$f\")",
      "Bash(then echo \"Not readable: $f\")",
      "Bash(if [ ! -f \"docs/$file.mdx\" ])",
      "Bash([ ! -f \"docs/$file.md\" ])",
      "Bash(then)",
      "Bash(git describe:*)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false timeout 120 uv run python3 -m pytest -m unit --tb=line -q --no-header)",
      "Bash(ENABLE_TRACING=false ENABLE_METRICS=false ENABLE_CONSOLE_EXPORT=false timeout 120 uv run python3 -m pytest -m unit -v --tb=no)",
      "Bash(make test-unit:*)"
    ],
    "deny": [],
    "ask": []
  }
}
