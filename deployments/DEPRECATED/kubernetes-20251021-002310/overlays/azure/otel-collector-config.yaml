# OpenTelemetry Collector Configuration for Azure (Application Insights)
# This is the Kubernetes ConfigMap version - references the base monitoring/otel-collector/azure-monitor.yaml

receivers:
  # OTLP receiver for application telemetry
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver for collector self-monitoring
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 30s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor for efficient data transmission
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 400
    spike_limit_mib: 100

  # Resource detection for Azure
  resourcedetection/azure:
    detectors: [azure, env, system]
    timeout: 5s
    override: false

  # Attributes processor for adding metadata
  attributes:
    actions:
      - key: deployment.environment
        value: ${ENVIRONMENT}
        action: insert
      - key: service.version
        value: ${SERVICE_VERSION}
        action: insert
      - key: cloud.provider
        value: azure
        action: insert
      - key: cloud.platform
        value: azure_aks
        action: insert

  # Transform processor for log metadata
  transform:
    log_statements:
      - context: log
        statements:
          - set(resource.attributes["service.name"], "mcp-server-langgraph")
          - set(resource.attributes["cloud.provider"], "azure")

  # Filter processor to drop low-severity logs (optional)
  filter:
    logs:
      log_record:
        - 'severity_number < SEVERITY_NUMBER_INFO'

exporters:
  # Azure Monitor exporter (unified for logs, metrics, traces)
  azuremonitor:
    # Connection string from environment variable (stored in Kubernetes secret)
    connection_string: ${AZURE_MONITOR_CONNECTION_STRING}

    # Instrumentation key (alternative to connection string)
    # instrumentation_key: ${AZURE_INSTRUMENTATION_KEY}

    # Endpoint override (optional)
    # endpoint: https://westus2-1.in.applicationinsights.azure.com/

    # Max batch size
    maxbatchsize: 1024

    # Max batch interval
    maxbatchinterval: 10s

    # Disable offline storage (use queue instead)
    disable_offline_storage: false

    # Span events enabled
    span_events_enabled: true

    # Resource attributes as tags
    resource_attributes_as_tags: true

    # Retry configuration
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

    # Queue settings
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 1000

    # Timeout
    timeout: 30s

  # Logging exporter for debugging (optional)
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

  # Prometheus exporter for collector metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: otelcol
    const_labels:
      platform: azure

service:
  # Enable telemetry for the collector itself
  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
      address: 0.0.0.0:8888

  # Define pipelines
  pipelines:
    # Logs pipeline
    logs:
      receivers: [otlp]
      processors:
        - memory_limiter
        - resourcedetection/azure
        - attributes
        - transform
        - filter
        - batch
      exporters: [azuremonitor, logging]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors:
        - memory_limiter
        - resourcedetection/azure
        - attributes
        - batch
      exporters: [azuremonitor, prometheus]

    # Traces pipeline
    traces:
      receivers: [otlp]
      processors:
        - memory_limiter
        - resourcedetection/azure
        - attributes
        - batch
      exporters: [azuremonitor, logging]

  # Extensions
  extensions: []
