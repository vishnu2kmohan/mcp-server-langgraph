apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secrets-manager
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1

      # Use IRSA for authentication
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets
            namespace: external-secrets-system

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-parameter-store
  namespace: mcp-server-langgraph
spec:
  provider:
    aws:
      service: ParameterStore
      region: us-east-1

      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets
            namespace: external-secrets-system

---
# Example: External Secret for Anthropic API Key
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: anthropic-api-key
  namespace: mcp-server-langgraph
spec:
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore

  target:
    name: anthropic-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        ANTHROPIC_API_KEY: "{{ .apiKey }}"

  # Refresh every hour
  refreshInterval: 1h

  data:
    - secretKey: apiKey
      remoteRef:
        key: mcp-langgraph/anthropic-api-key
        property: api_key

---
# Example: External Secret for JWT Secret
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: jwt-secret
  namespace: mcp-server-langgraph
spec:
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore

  target:
    name: jwt-credentials
    creationPolicy: Owner

  refreshInterval: 24h

  data:
    - secretKey: JWT_SECRET_KEY
      remoteRef:
        key: mcp-langgraph/jwt-secret
        property: secret_key

---
# Example: External Secret for LangSmith
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: langsmith-api-key
  namespace: mcp-server-langgraph
spec:
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore

  target:
    name: langsmith-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        LANGSMITH_API_KEY: "{{ .apiKey }}"
        LANGSMITH_PROJECT: "{{ .project }}"

  refreshInterval: 1h

  dataFrom:
    - extract:
        key: mcp-langgraph/langsmith

---
# Example: Push Secret (Kubernetes -> AWS Secrets Manager)
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: backup-postgres-password
  namespace: mcp-server-langgraph
spec:
  refreshInterval: 24h

  secretStoreRefs:
    - name: aws-secrets-manager
      kind: ClusterSecretStore

  selector:
    secret:
      name: postgres-credentials

  data:
    - match:
        secretKey: password
        remoteRef:
          remoteKey: mcp-langgraph/postgres-backup-password
