# OpenTelemetry Collector Configuration for GCP Staging
# Sends telemetry to Cloud Logging, Cloud Monitoring, and Cloud Trace

receivers:
  # OTLP receiver for application telemetry
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver for collector self-monitoring
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 30s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor for efficient data transmission
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 400
    spike_limit_mib: 100

  # Resource detection for GCP
  resourcedetection/gcp:
    detectors: [gcp, env, system]
    timeout: 5s
    override: false

  # Attributes processor for adding metadata
  attributes:
    actions:
      - key: deployment.environment
        value: staging
        action: insert
      - key: service.version
        value: ${SERVICE_VERSION:-unknown}
        action: insert
      - key: cloud.provider
        value: gcp
        action: insert
      - key: cloud.region
        value: us-central1
        action: insert

  # Filter out noisy metrics
  filter/drop_noisy_metrics:
    metrics:
      exclude:
        match_type: regexp
        metric_names:
          - .*grpc_io.*
          - .*http_client.*

exporters:
  # Google Cloud Logging
  googlecloud:
    project: vishnu-sandbox-20250310
    log:
      default_log_name: mcp-staging-logs
    metric:
      prefix: custom.googleapis.com/mcp-staging/
      skip_create_descriptor: false
      instrumentation_library_labels: true
      service_resource_labels: true
    trace:
      # Cloud Trace
    use_insecure: false
    timeout: 12s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  # Prometheus (for local metrics scraping)
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: mcp_staging
    const_labels:
      environment: staging
      platform: gke

  # Debug exporter (disabled in production, useful for troubleshooting)
  # Uncomment to enable detailed logging of telemetry
  # logging:
  #   loglevel: debug
  #   sampling_initial: 5
  #   sampling_thereafter: 200

service:
  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors:
        - memory_limiter
        - resourcedetection/gcp
        - attributes
        - batch
      exporters: [googlecloud]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors:
        - memory_limiter
        - resourcedetection/gcp
        - attributes
        - filter/drop_noisy_metrics
        - batch
      exporters: [googlecloud, prometheus]

    # Logs pipeline
    logs:
      receivers: [otlp]
      processors:
        - memory_limiter
        - resourcedetection/gcp
        - attributes
        - batch
      exporters: [googlecloud]

  # Telemetry for the collector itself
  telemetry:
    logs:
      level: info
      encoding: json
    metrics:
      level: detailed
      address: 0.0.0.0:8888

  # Extensions
  extensions: []
