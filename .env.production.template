# Production Environment Configuration Template
# Copy this to .env and fill in actual values for production deployment

# =============================================================================
# ENVIRONMENT
# =============================================================================
ENVIRONMENT=production

# =============================================================================
# LLM PROVIDER (Choose one and configure)
# =============================================================================
# Primary LLM provider (anthropic, openai, google, azure, bedrock, ollama)
PRIMARY_LLM_PROVIDER=anthropic
PRIMARY_MODEL_NAME=claude-sonnet-4-5-20250929

# API Keys (choose based on provider)
# ANTHROPIC_API_KEY=sk-ant-xxxxx
# OPENAI_API_KEY=sk-proj-xxxxx
# GOOGLE_API_KEY=AIzaSyxxxxx

# Fallback models (optional but recommended)
FALLBACK_LLM_PROVIDERS=openai,google
FALLBACK_MODEL_NAMES=gpt-5,gemini-2.5-flash

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# JWT Secret (REQUIRED - generate with: openssl rand -hex 32)
JWT_SECRET_KEY=<generate-secure-secret-here>
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=60

# Authentication provider (in_memory, keycloak)
AUTH_PROVIDER=keycloak

# Keycloak Configuration (if using Keycloak)
# KEYCLOAK_SERVER_URL=https://keycloak.example.com
# KEYCLOAK_REALM=mcp-server
# KEYCLOAK_CLIENT_ID=mcp-client
# KEYCLOAK_CLIENT_SECRET=xxxxx

# =============================================================================
# SESSION MANAGEMENT
# =============================================================================
# Session backend (memory, redis)
# CRITICAL: Use redis for production (multi-replica deployments)
SESSION_BACKEND=redis
SESSION_REDIS_URL=redis://redis:6379/0
SESSION_TTL_SECONDS=3600
SESSION_MAX_PER_USER=10

# =============================================================================
# AUTHORIZATION (OpenFGA)
# =============================================================================
# OpenFGA Configuration
OPENFGA_API_URL=http://openfga:8080
# OPENFGA_STORE_ID=<your-store-id>
# OPENFGA_MODEL_ID=<your-model-id>

# Mock authorization (ONLY for development)
MOCK_AUTHORIZATION_ENABLED=false

# =============================================================================
# SECRETS MANAGEMENT (Infisical - Optional)
# =============================================================================
# Infisical Configuration (recommended for production)
# Fallback: Environment variables (not recommended for secrets)
# INFISICAL_CLIENT_ID=xxxxx
# INFISICAL_CLIENT_SECRET=xxxxx
# INFISICAL_PROJECT_ID=xxxxx

# =============================================================================
# GDPR COMPLIANCE STORAGE (REQUIRED FOR PRODUCTION)
# =============================================================================
# CRITICAL: Set to postgres or redis for production compliance
# In-memory storage will cause data loss on restart
GDPR_STORAGE_BACKEND=postgres

# PostgreSQL (recommended)
# GDPR_POSTGRES_URL=postgresql://user:pass@postgres:5432/gdpr_db

# Redis (alternative)
# GDPR_REDIS_URL=redis://redis:6379/3

# =============================================================================
# OBSERVABILITY
# =============================================================================
# OpenTelemetry
ENABLE_TELEMETRY=true
OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
OTEL_SERVICE_NAME=mcp-server-langgraph

# LangSmith (optional)
# LANGSMITH_API_KEY=lsv2_xxxxx
# LANGSMITH_PROJECT=mcp-server-production

# Logging
LOG_LEVEL=INFO
ENABLE_FILE_LOGGING=true
LOG_FILE_PATH=/var/log/mcp-server/app.log

# =============================================================================
# ANTHROPIC BEST PRACTICES FEATURES
# =============================================================================
# Just-in-Time Context Loading
ENABLE_DYNAMIC_CONTEXT_LOADING=true
DYNAMIC_CONTEXT_TOP_K=3
DYNAMIC_CONTEXT_MAX_TOKENS=2000

# Qdrant Vector Database (required for dynamic context)
QDRANT_URL=http://qdrant:6333
QDRANT_COLLECTION_NAME=mcp_context

# Parallel Tool Execution
ENABLE_PARALLEL_EXECUTION=true
MAX_PARALLEL_TOOLS=5

# Enhanced Note-Taking
ENABLE_LLM_EXTRACTION=true

# Context Compaction
ENABLE_CONTEXT_COMPACTION=true

# Response Verification
ENABLE_VERIFICATION=true
MAX_REFINEMENT_ATTEMPTS=3

# =============================================================================
# CONVERSATION CHECKPOINTING
# =============================================================================
# Checkpoint backend (memory, redis)
# CRITICAL: Use redis for production (distributed state)
CHECKPOINT_BACKEND=redis
CHECKPOINT_REDIS_URL=redis://redis:6379/1
CHECKPOINT_REDIS_TTL=604800

# =============================================================================
# RATE LIMITING & PERFORMANCE
# =============================================================================
# Token limits
MAX_INPUT_TOKENS=100000
MAX_OUTPUT_TOKENS=4096

# Response optimization
ENABLE_RESPONSE_TRUNCATION=true
MAX_RESPONSE_LENGTH=25000

# =============================================================================
# CORS & SECURITY
# =============================================================================
# Allowed CORS origins (comma-separated)
# CORS_ORIGINS=https://app.example.com,https://admin.example.com

# =============================================================================
# DEPLOYMENT
# =============================================================================
# Service configuration
HOST=0.0.0.0
PORT=8000
WORKERS=4

# Health check
ENABLE_HEALTH_CHECKS=true
HEALTH_CHECK_INTERVAL=30

# =============================================================================
# NOTES
# =============================================================================
# 1. Replace all <xxxxx> placeholders with actual values
# 2. Store this file securely (never commit with real secrets)
# 3. Use secret management (Infisical, Kubernetes Secrets, etc.) in production
# 4. See docs/deployment/ for detailed configuration guides
# 5. Validate config with: make validate-config
